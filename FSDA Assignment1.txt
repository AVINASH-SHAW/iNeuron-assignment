CREATE DATABASE AVINASH;
USE DATABASE AVINASH;
--------- TASK-1 ---------
CREATE OR REPLACE TABLE SHOPPING_HISTORY(
  PRODUCT VARCHAR(100) NOT NULL,
  QUANTITY INT NOT NULL,
  UNIT_PRICE INT NOT NULL
);

INSERT INTO SHOPPING_HISTORY VALUES 
('MILK', 3, 10),
('BREAD', 7, 3),
('BREAD', 5, 2);

SELECT * FROM SHOPPING_HISTORY ;

SELECT PRODUCT, SUM(QUANTITY * UNIT_PRICE) AS TOTAL_PRICE FROM SHOPPING_HISTORY GROUP BY PRODUCT  ;

--------- TASK-2 ---------
CREATE OR REPLACE TABLE PHONES (
  NAME VARCHAR(20) NOT NULL UNIQUE,
  PHONE_NUMBER INT NOT NULL UNIQUE
);

CREATE OR REPLACE TABLE CALLS (
  ID INT NOT NULL,
  CALLER INT NOT NULL,
  CALLEE INT NOT NULL,
  DURATION INT NOT NULL,
  UNIQUE(ID)
);

----- PART 1 ---------

INSERT INTO PHONES VALUES
('JACK', 1234),
('LENA', 3333),
('MARK', 9999),
('ANNA', 7582);


INSERT INTO CALLS VALUES
(25,1234,7582,8),
(7,9999, 7582,1),
(18,9999, 3333, 4),
(2,7582, 3333, 3),
(3,3333,1234,1),
(21,3333,1234,1);
SELECT * FROM PHONES;
SELECT * FROM CALLS;

SELECT P.NAME  FROM (WITH TABLE_1 AS (SELECT CALLER, SUM(DURATION) AS CALLER_DUR FROM CALLS GROUP BY CALLER ORDER BY 1),
TABLE_2 AS (SELECT CALLEE, SUM(DURATION) AS CALLEE_DUR FROM CALLS GROUP BY CALLEE ORDER BY 1)
SELECT T1.CALLER AS CLIENT_PN, (T1.CALLER_DUR + T2.CALLEE_DUR) AS TOT_DUR 
FROM TABLE_1 AS T1 LEFT JOIN TABLE_2 AS T2 ON T1.CALLER = T2.CALLEE) A
LEFT JOIN PHONES P ON A.CLIENT_PN  = P.PHONE_NUMBER WHERE TOT_DUR>=10 ORDER BY 1 ;

--------- PART 2 -----------
INSERT INTO PHONES VALUES
('JOHN', 6356),
('ADDISON', 4315),
('KATE', 8003),
('GINNY', 9831);

INSERT INTO CALLS VALUES
(65,8003,9831,7),
(100,9831, 8003,3),
(145, 4315, 9831, 18);
SELECT * FROM PHONES;
SELECT * FROM CALLS;

SELECT P.NAME, A.TOT_DUR  FROM (WITH TABLE_1 AS (SELECT CALLER, SUM(DURATION) AS CALLER_DUR FROM CALLS GROUP BY CALLER ORDER BY 1),
TABLE_2 AS (SELECT CALLEE, SUM(DURATION) AS CALLEE_DUR FROM CALLS GROUP BY CALLEE ORDER BY 1)
SELECT T1.CALLER AS CLIENT_PN, (T1.CALLER_DUR + T2.CALLEE_DUR) AS TOT_DUR 
FROM TABLE_1 AS T1 LEFT JOIN TABLE_2 AS T2 ON T1.CALLER = T2.CALLEE) A
LEFT JOIN PHONES P ON A.CLIENT_PN  = P.PHONE_NUMBER WHERE TOT_DUR>=10 ORDER BY 1 ;

--------- TASK-3 ---------
USE DATABASE AVINASH;
CREATE OR REPLACE TABLE TRANSACTIONS(
  AMOUNT INT NOT NULL,
  DATE DATE NOT NULL
);

--------- PART1 ------------
INSERT INTO TRANSACTIONS VALUES
(1000, '2020-01-06'),
(-10, '2020-01-14'),
(-75, '2020-01-20'),
(-5, '2020-01-25'),
(-4, '2020-01-29'),
(2000, '2020-03-10'),
(-75, '2020-03-12'),
(-20, '2020-03-05'),
(40, '2020-03-15'),
(-50, '2020-03-15'),
(200, '2020-10-10'),
(-200, '2020-10-10');

SELECT SUM(AMOUNT) FROM TRANSACTIONS;

WITH TABLE_4 AS(WITH TABLE_3 AS (WITH TABLE_2 AS (WITH TABLE_1 AS (SELECT *, EXTRACT(MONTH FROM DATE) AS MON, 
                 CASE WHEN AMOUNT <0 THEN 'DEBIT'
                 ELSE 'CREDIT' END AS TYPE
                 FROM TRANSACTIONS)
SELECT MON, COUNT(AMOUNT) AS NO_TXN, SUM(AMOUNT)  AS DEBIT_SUM FROM TABLE_1 WHERE TYPE = 'DEBIT' GROUP BY MON)

SELECT COUNT(*) AS NO_FEE_MONTH FROM TABLE_2 WHERE NO_TXN>=3 AND DEBIT_SUM<=-100)

SELECT 5*(12-NO_FEE_MONTH) AS TOTAL_FEE FROM TABLE_3),

TABLE_5 AS (SELECT SUM(AMOUNT) AS TOT_AMT FROM TRANSACTIONS)

SELECT (T5.TOT_AMT - T4.TOTAL_FEE) AS BALANCE FROM TABLE_4 AS T4 , TABLE_5 AS T5  ;

--------------- PART 2 -------------

CREATE OR REPLACE TABLE TRANSACTIONS(
  AMOUNT INT NOT NULL,
  DATE DATE NOT NULL
);

INSERT INTO TRANSACTIONS VALUES
(1, '2020-06-29'),
(35, '2020-02-20'),
(-50, '2020-02-03'),
(-1, '2020-02-26'),
(-200, '2020-08-01'),
(-44, '2020-02-07'),
(-5, '2020-02-25'),
(1, '2020-06-29'),
(1, '2020-06-29'),
(-100, '2020-12-29'),
(-100, '2020-12-30'),
(-100, '2020-12-31');

SELECT * FROM TRANSACTIONS;

WITH TABLE_4 AS(WITH TABLE_3 AS (WITH TABLE_2 AS (WITH TABLE_1 AS (SELECT *, EXTRACT(MONTH FROM DATE) AS MON, 
                 CASE WHEN AMOUNT <0 THEN 'DEBIT'
                 ELSE 'CREDIT' END AS TYPE
                 FROM TRANSACTIONS)
SELECT MON, COUNT(AMOUNT) AS NO_TXN, SUM(AMOUNT)  AS DEBIT_SUM FROM TABLE_1 WHERE TYPE = 'DEBIT' GROUP BY MON)

SELECT COUNT(*) AS NO_FEE_MONTH FROM TABLE_2 WHERE NO_TXN>=3 AND DEBIT_SUM<=-100)

SELECT 5*(12-NO_FEE_MONTH) AS TOTAL_FEE FROM TABLE_3),

TABLE_5 AS (SELECT SUM(AMOUNT) AS TOT_AMT FROM TRANSACTIONS)

SELECT (T5.TOT_AMT - T4.TOTAL_FEE) AS BALANCE FROM TABLE_4 AS T4 , TABLE_5 AS T5  ;

--------------- PART 3 -------------

CREATE OR REPLACE TABLE TRANSACTIONS(
  AMOUNT INT NOT NULL,
  DATE DATE NOT NULL
);

INSERT INTO TRANSACTIONS VALUES
(6000, '2020-04-03'),
(5000, '2020-04-02'),
(4000, '2020-04-01'),
(3000, '2020-03-01'),
(2000, '2020-02-01'),
(1000, '2020-01-01');

SELECT * FROM TRANSACTIONS;

WITH TABLE_4 AS(WITH TABLE_3 AS (WITH TABLE_2 AS (WITH TABLE_1 AS (SELECT *, EXTRACT(MONTH FROM DATE) AS MON, 
                 CASE WHEN AMOUNT <0 THEN 'DEBIT'
                 ELSE 'CREDIT' END AS TYPE
                 FROM TRANSACTIONS)
SELECT MON, COUNT(AMOUNT) AS NO_TXN, SUM(AMOUNT)  AS DEBIT_SUM FROM TABLE_1 WHERE TYPE = 'DEBIT' GROUP BY MON)

SELECT COUNT(*) AS NO_FEE_MONTH FROM TABLE_2 WHERE NO_TXN>=3 AND DEBIT_SUM<=-100)

SELECT 5*(12-NO_FEE_MONTH) AS TOTAL_FEE FROM TABLE_3),

TABLE_5 AS (SELECT SUM(AMOUNT) AS TOT_AMT FROM TRANSACTIONS)

SELECT (T5.TOT_AMT - T4.TOTAL_FEE) AS BALANCE FROM TABLE_4 AS T4 , TABLE_5 AS T5;

------------------- END -----------------