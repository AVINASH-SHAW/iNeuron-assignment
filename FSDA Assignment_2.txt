USE DATABASE AVINASH;

------------ PART-1 (UK road safety)----------


CREATE OR REPLACE TABLE ACCIDENT_DATA(
  ACCIDENT_INDEX VARCHAR(100) NOT NULL,
  LOCATION_EASTING_OSGR INT,
  LOCATION_NORTHING_OSGR INT,
  LONGITUDE NUMBER,
  LATITUDE NUMBER,
  POLICE_FORCE VARCHAR(100),
  ACCIDENT_SEVERITY VARCHAR(100),
  NUMBER_OF_VEHICLES INT,
  NUMBER_OF_CASUALTIES INT,
  DATE VARCHAR(100),
  DAY_OF_WEEK VARCHAR(100),
  TIME TIME,
  LOCAL_AUTHORITY_DISTRICT VARCHAR(100),
  LOCAL_AUTHORITY_HIGHWAY VARCHAR(100),
  `1ST_ROAD_CLASS` VARCHAR(100),
  `1ST_ROAD_NUMBER`	INT,
  ROAD_TYPE VARCHAR(100),
  SPEED_LIMIT INT,
  JUNCTION_DETAIL VARCHAR(100),
  JUNCTION_CONTROL VARCHAR(100),
  `2ND_ROAD_CLASS` VARCHAR(100),
  `2ND_ROAD_NUMBER` INT,
  PEDESTRIAN_CROSSING_HUMAN_CONTROL VARCHAR(100),
  PEDESTRIAN_CROSSING_PHYSICAL_FACILITIES VARCHAR(100),
  LIGHT_CONDITIONS VARCHAR(100),
  WEATHER_CONDITIONS VARCHAR(100),
  ROAD_SURFACE_CONDITIONS VARCHAR(100),
  SPECIAL_CONDITIONS_AT_SITE VARCHAR(100),
  CARRIAGEWAY_HAZARDS VARCHAR(100),
  URBAN_OR_RURAL_AREA VARCHAR(100),
  DID_POLICE_OFFICER_ATTEND_SCENE_OF_ACCIDENT VARCHAR(100),
  LSOA_OF_ACCIDENT_LOCATION VARCHAR(100),
  PRIMARY KEY(ACCIDENT_INDEX)
);

------ LOADING THE DATA INTO THE ACCIDENT_DATA TABLE

SELECT * FROM ACCIDENT_DATA;

SELECT COUNT(*) FROM ACCIDENT_DATA;

SELECT DISTINCT COUNT(ACCIDENT_INDEX) FROM ACCIDENT_DATA; ---- 140056 NUMBERS OF ACCIDENT CASES ARE RECORDDED

CREATE OR REPLACE TABLE VEHICLE_DATA(
  ACCIDENT_INDEX VARCHAR(100) NOT NULL,
  VEHICLE_REFERENCE INT,
  VEHICLE_TYPE VARCHAR(100),
  TOWING_AND_ARTICULATION VARCHAR(100),
  VEHICLE_MANOEUVRE VARCHAR(100),
  VEHICLE_LOCATION_RESTRICTED_LANE VARCHAR(100),
  JUNCTION_LOCATION VARCHAR(100),
  SKIDDING_AND_OVERTURNING VARCHAR(100),
  HIT_OBJECT_IN_CARRIAGEWAY VARCHAR(100),
  VEHICLE_LEAVING_CARRIAGEWAY VARCHAR(100),
  HIT_OBJECT_OFF_CARRIAGEWAY VARCHAR(100),
  `1ST_POINT_OF_IMPACT` VARCHAR(100),
  WAS_VEHICLE_LEFT_HAND_DRIVE VARCHAR(100),
  JOURNEY_PURPOSE_OF_DRIVER VARCHAR(100),
  SEX_OF_DRIVER VARCHAR(100),
  AGE_OF_DRIVER INT,
  AGE_BAND_OF_DRIVER VARCHAR(100),
  ENGINE_CAPACITY_CC INT,
  PROPULSION_CODE VARCHAR(100),
  AGE_OF_VEHICLE INT,
  DRIVER_IMD_DECILE VARCHAR(100),
  DRIVER_HOME_AREA_TYPE VARCHAR(100),
  VEHICLE_IMD_DECILE VARCHAR(100),
FOREIGN KEY(ACCIDENT_INDEX) REFERENCES ACCIDENT_DATA(ACCIDENT_INDEX));

------ LOADING THE DATA INTO THE VEHICLE_DATA TABLE

SELECT * FROM VEHICLE_DATA;
SELECT COUNT(*) FROM VEHICLE_DATA;
SELECT COUNT(DISTINCT ACCIDENT_INDEX) FROM VEHICLE_DATA; ---VEHICLE DETAILS OF 80568 NUMBERS OF ACCIDENTS IS AVAIALBLE IN VEHICLE DATA SET 

CREATE OR REPLACE TABLE VEHICLE_TYPES(
  CODE INT,
  LABEL VARCHAR(100)
); 

------ LOADING THE DATA INTO THE VEHICLE_TYPES TABLE

SELECT * FROM ACCIDENT_DATA;
SELECT * FROM VEHICLE_DATA;
SELECT * FROM VEHICLE_TYPES;

----Evaluate the median severity value of accidents caused by various Motorcycles.
WITH TABLE_2 AS (WITH TABLE_1 AS (SELECT V.ACCIDENT_INDEX, V.VEHICLE_TYPE, A.ACCIDENT_SEVERITY, VT.LABEL  FROM VEHICLE_DATA AS V 
INNER JOIN ACCIDENT_DATA AS A ON A.ACCIDENT_INDEX = V.ACCIDENT_INDEX
INNER JOIN VEHICLE_TYPES AS VT ON V.VEHICLE_TYPE = VT.CODE) 
SELECT *, ROW_NUMBER() OVER(ORDER BY ACCIDENT_SEVERITY) AS RN, COUNT(ACCIDENT_SEVERITY) OVER() AS CNT FROM TABLE_1 WHERE LABEL LIKE '%otorcycl%')

SELECT AVG(ACCIDENT_SEVERITY) FROM TABLE_2 WHERE RN IN (CEIL(CNT/2),FLOOR(CNT/2+1))
;


----- Evaluate Accident Severity and Total Accidents per Vehicle Type
WITH TABLE_1 AS (SELECT V.ACCIDENT_INDEX, V.VEHICLE_TYPE, A.ACCIDENT_SEVERITY, VT.LABEL  FROM VEHICLE_DATA AS V 
INNER JOIN ACCIDENT_DATA AS A ON A.ACCIDENT_INDEX = V.ACCIDENT_INDEX
INNER JOIN VEHICLE_TYPES AS VT ON V.VEHICLE_TYPE = VT.CODE)
SELECT LABEL AS VEHICLE_TYPE, ROUND(AVG(ACCIDENT_SEVERITY),3) AS AVERAGE_SEVERITY, COUNT(ACCIDENT_SEVERITY) AS TOTAL_ACCIDENTS 
FROM TABLE_1 GROUP BY LABEL ORDER BY 3 DESC;

----- Calculate the Average Severity by vehicle type

WITH TABLE_1 AS (SELECT V.ACCIDENT_INDEX, V.VEHICLE_TYPE, A.ACCIDENT_SEVERITY, VT.LABEL  FROM VEHICLE_DATA AS V 
INNER JOIN ACCIDENT_DATA AS A ON A.ACCIDENT_INDEX = V.ACCIDENT_INDEX
INNER JOIN VEHICLE_TYPES AS VT ON V.VEHICLE_TYPE = VT.CODE)
SELECT LABEL AS VEHICLE_TYPE, ROUND(AVG(ACCIDENT_SEVERITY),3) AS AVERAGE_SEVERITY FROM TABLE_1 GROUP BY 1 ORDER BY 2 DESC;

---- Calculate the Average Severity and Total Accidents by Motorcycle.

WITH TABLE_1 AS (SELECT V.ACCIDENT_INDEX, V.VEHICLE_TYPE, A.ACCIDENT_SEVERITY, VT.LABEL  FROM VEHICLE_DATA AS V 
INNER JOIN ACCIDENT_DATA AS A ON A.ACCIDENT_INDEX = V.ACCIDENT_INDEX
INNER JOIN VEHICLE_TYPES AS VT ON V.VEHICLE_TYPE = VT.CODE)
SELECT ROUND(AVG(ACCIDENT_SEVERITY),2) AS AVERAGE_SEVERITY, COUNT(ACCIDENT_SEVERITY) AS TOTAL_ACCIDENTS FROM TABLE_1 WHERE LABEL LIKE '%otorcy%' ;


------------------------------------- PART-2 (CIA world factbook) --------------------------------
USE DATABASE AVINASH;
CREATE OR REPLACE TABLE FACTBOOK(
  country VARCHAR(100) NOT NULL,
  area INT,
  birth_rate DECIMAL(6,3),
  death_rate DECIMAL(6,3),
  infant_mortality_rate DECIMAL(6,3),
  internet_users INT,
  life_exp_at_birth DECIMAL(6,3), 
  maternal_mortality_rate INT,
  net_migration_rate DECIMAL(6,3),
  population INT,
  population_growth_rate DECIMAL(6,3));
  
SELECT * FROM FACTBOOK;

------ Which country has the highest population?
SELECT COUNTRY, POPULATION FROM FACTBOOK WHERE POPULATION IS NOT NULL ORDER BY POPULATION DESC LIMIT 1 ; --- CHINA has the highest populatin

------ Which country has the least number of people?
SELECT COUNTRY, POPULATION FROM FACTBOOK WHERE POPULATION IS NOT NULL ORDER BY POPULATION ASC LIMIT 1 ; --- Pitcairn Islands has the least number of people

------ Which country is witnessing the highest population growth?
SELECT COUNTRY, POPULATION_GROWTH_RATE FROM FACTBOOK 
WHERE POPULATION_GROWTH_RATE IS NOT NULL ORDER BY POPULATION_GROWTH_RATE DESC LIMIT 1; ---LEBANON has the highest population growth

------ Which country has an extraordinary number for the population?
SELECT COUNTRY, AREA, POPULATION, ROUND(POPULATION/AREA,2) AS POPULATION_DENSITY 
FROM FACTBOOK WHERE AREA AND POPULATION IS NOT NULL ORDER BY POPULATION_DENSITY DESC ; --- Macau is having very high population despite having very small area


------ Which is the most densely populated country in the world?
SELECT COUNTRY, AREA, POPULATION, ROUND(POPULATION/AREA,2) AS POPULATION_DENSITY 
FROM FACTBOOK WHERE AREA AND POPULATION IS NOT NULL ORDER BY POPULATION_DENSITY DESC LIMIT 1; --- MACAU is the most densely populated country in the world

